// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$client-name: 'client'
$client-x: 256px
$client-y: 0px
$client-offset-x: -256px
$client-offset-y: 0px
$client-width: 85px
$client-height: 85px
$client-total-width: 341px
$client-total-height: 296px
$client-image: '/assets/images/sprite.png'
$client: (256px, 0px, -256px, 0px, 85px, 85px, 341px, 296px, '/assets/images/sprite.png', 'client', )
$flags-name: 'flags'
$flags-x: 0px
$flags-y: 0px
$flags-offset-x: 0px
$flags-offset-y: 0px
$flags-width: 256px
$flags-height: 176px
$flags-total-width: 341px
$flags-total-height: 296px
$flags-image: '/assets/images/sprite.png'
$flags: (0px, 0px, 0px, 0px, 256px, 176px, 341px, 296px, '/assets/images/sprite.png', 'flags', )
$logo-big-name: 'logo_big'
$logo-big-x: 0px
$logo-big-y: 176px
$logo-big-offset-x: 0px
$logo-big-offset-y: -176px
$logo-big-width: 207px
$logo-big-height: 75px
$logo-big-total-width: 341px
$logo-big-total-height: 296px
$logo-big-image: '/assets/images/sprite.png'
$logo-big: (0px, 176px, 0px, -176px, 207px, 75px, 341px, 296px, '/assets/images/sprite.png', 'logo_big', )
$logo-small-name: 'logo_small'
$logo-small-x: 0px
$logo-small-y: 251px
$logo-small-offset-x: 0px
$logo-small-offset-y: -251px
$logo-small-width: 120px
$logo-small-height: 45px
$logo-small-total-width: 341px
$logo-small-total-height: 296px
$logo-small-image: '/assets/images/sprite.png'
$logo-small: (0px, 251px, 0px, -251px, 120px, 45px, 341px, 296px, '/assets/images/sprite.png', 'logo_small', )
$mail-name: 'mail'
$mail-x: 256px
$mail-y: 115px
$mail-offset-x: -256px
$mail-offset-y: -115px
$mail-width: 22px
$mail-height: 18px
$mail-total-width: 341px
$mail-total-height: 296px
$mail-image: '/assets/images/sprite.png'
$mail: (256px, 115px, -256px, -115px, 22px, 18px, 341px, 296px, '/assets/images/sprite.png', 'mail', )
$pencil-name: 'pencil'
$pencil-x: 308px
$pencil-y: 85px
$pencil-offset-x: -308px
$pencil-offset-y: -85px
$pencil-width: 22px
$pencil-height: 21px
$pencil-total-width: 341px
$pencil-total-height: 296px
$pencil-image: '/assets/images/sprite.png'
$pencil: (308px, 85px, -308px, -85px, 22px, 21px, 341px, 296px, '/assets/images/sprite.png', 'pencil', )
$phone-name: 'phone'
$phone-x: 286px
$phone-y: 85px
$phone-offset-x: -286px
$phone-offset-y: -85px
$phone-width: 22px
$phone-height: 22px
$phone-total-width: 341px
$phone-total-height: 296px
$phone-image: '/assets/images/sprite.png'
$phone: (286px, 85px, -286px, -85px, 22px, 22px, 341px, 296px, '/assets/images/sprite.png', 'phone', )
$profile-name: 'profile'
$profile-x: 256px
$profile-y: 85px
$profile-offset-x: -256px
$profile-offset-y: -85px
$profile-width: 30px
$profile-height: 30px
$profile-total-width: 341px
$profile-total-height: 296px
$profile-image: '/assets/images/sprite.png'
$profile: (256px, 85px, -256px, -85px, 30px, 30px, 341px, 296px, '/assets/images/sprite.png', 'profile', )
$spritesheet-width: 341px
$spritesheet-height: 296px
$spritesheet-image: '/assets/images/sprite.png'
$spritesheet-sprites: ($client, $flags, $logo-big, $logo-small, $mail, $pencil, $phone, $profile, )
$spritesheet: (341px, 296px, '/assets/images/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
